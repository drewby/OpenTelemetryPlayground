apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: opentelemetry
spec:
  config: |
    exporters:
      otlphttp:
        endpoint: http://jaeger-collector.jaeger:4318
      prometheusremotewrite:
        endpoint: http://prometheus-server.prometheus/api/v1/write
        tls:
          insecure: true

    processors:
      batch:
      transform:
        trace_statements:
          - context: span
            statements:
              - set(attributes["from_shared"], "true")
      tail_sampling:
        decision_wait: 5s
        num_traces: 100
        expected_new_traces_per_sec: 10
        policies:
          [
            {
              name: tenpercent,
              type: probabilistic,
              probabilistic: {sampling_percentage: 10}
            },
            { 
              name: errors,
              type: status_code,
              status_code: {status_codes: [ERROR, UNSET]}
            },
            {
              name: latency,
              type: latency,
              latency: { threshold_ms: 2000 }
            }
          ]
    receivers:
      otlp:
        protocols:
          http:
            include_metadata: true
            cors:
              allowed_origins:
                - http://localhost
                - http://localhost:8080
              # allowed_headers:
              #   - Example-Header
              max_age: 7200
      prometheus/own_metrics:
        config:
          scrape_configs:
            - job_name: otel-collector
              scrape_interval: 10s
              static_configs:
                - targets: [0.0.0.0:8888]
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [transform,tail_sampling]
          exporters: [otlphttp]
        metrics:
          receivers: [otlp,prometheus/own_metrics]
          processors: []
          exporters: [prometheusremotewrite]